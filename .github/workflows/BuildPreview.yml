name: Remote Dispatch Build App

on: [repository_dispatch]

jobs:
  apk:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.5.0
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v2
        with:
          repository: "namnguyen51/Nomic"
          fetch-depth: 0

      - name: Git fetch tags
        run: git fetch --tags

      - name: Set CURRENT_VERSION
        run: echo "CURRENT_VERSION=$(git tag -l --sort version:refname | tail -2 | head -n 1)" >> $GITHUB_ENV

      - name: Set NEXT_VERSION
        run: echo "NEXT_VERSION=$(git tag -l --sort version:refname | tail -1)" >> $GITHUB_ENV

      - name: Set RELEASE_NOTES
        run: |
          set -x
          release_notes="$(git log ${{ env.CURRENT_VERSION }}..${{ env.NEXT_VERSION }} --pretty=format:'- %s (@%an)')"
          release_notes="${release_notes//$'%'/%25}"
          release_notes="${release_notes//$'\n'/%0A}"
          release_notes="${release_notes//$'\r'/%0D}"
          echo "RELEASE_NOTES=$release_notes" >> $GITHUB_ENV

      - name: Set CHANGELOG
        run: |
          changelog="$(git log ${{ env.CURRENT_VERSION }}..${{ env.NEXT_VERSION }} --pretty=format:'{{changelogtext}}%s (@%an){{!changelogtext}}')"
          changelog="${changelog//$'%'/%25}"
          changelog="${changelog//$'\n'/}"
          changelog="${changelog//$'\r'/}"
          changelog="${changelog//$'<'/}"
          changelog="${changelog//$'>'/}"
          changelog="${changelog//$'&'/}"
          changelog="$(echo $changelog | sed -e 's/{{changelogtext}}/<changelogtext>/g')"
          changelog="$(echo $changelog | sed -e 's/{{!changelogtext}}/<\/changelogtext>/g')"
          changelog="<?xml version=\"1.0\" encoding=\"utf-8\"?><changelog bulletedList=\"true\"><changelogversion versionName=\"${{ github.run_number }}\" changeDate=\"\">$changelog</changelogversion></changelog>"
          echo "CHANGELOG=$changelog" >> $GITHUB_ENV

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Copy CI gradle.properties
        run: |
          mkdir -p ~/.gradle
          cp .github/runner-files/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Write Version.kt
        uses: DamianReeves/write-file-action@v1.0
        with:
          # The path to the file to write
          path: app/src/main/java/exh/Version.kt
          # The contents of the file
          contents: 'package exh const val syDebugVersion: String = "${{ github.run_number }}"'
          # The mode of writing to use: `overwrite`, `append`, or `preserve`.
          write-mode: overwrite # optional, default is preserve

      - name: Write changelog_debug.xml
        uses: DamianReeves/write-file-action@v1.0
        with:
          # The path to the file to write
          path: app/src/main/res/raw/changelog_debug.xml
          # The contents of the file
          contents: "${{ env.CHANGELOG }}"
          # The mode of writing to use: `overwrite`, `append`, or `preserve`.
          write-mode: overwrite # optional, default is preserve

      - name: Write google-services.json
        uses: DamianReeves/write-file-action@v1.0
        with:
          # The path to the file to write
          path: app/google-services.json
          # The contents of the file
          contents: ${{ secrets.GOOGLE_SERVICES_TEXT }}
          # The mode of writing to use: `overwrite`, `append`, or `preserve`.
          write-mode: overwrite # optional, default is preserve

      - name: Build app
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: assembleRelease --stacktrace
          wrapper-cache-enabled: true
          dependencies-cache-enabled: true
          configuration-cache-enabled: true

      - name: Sign Android Release
        uses: r0adkll/sign-android-release@v1
        with:
          # The directory to find your release to sign
          releaseDirectory: app/build/outputs/apk/standard/release
          # The key used to sign your release in base64 encoded format
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          # The key alias
          alias: ${{ secrets.ALIAS }}
          # The password to the keystore
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          # The password for the key
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Nomic Release Build ${{ github.run_number }}
          body: ${{ env.RELEASE_NOTES }}
          draft: false
          prerelease: false

      - name: Upload Release APK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.SIGNED_RELEASE_FILE }}
          asset_name: Nomic_${{ github.run_number }}.apk
          asset_content_type: application/vnd.android.package-archive
